from web3 import Web3,HTTPProvider
import json
from solcx import compile_files

web_link="http://127.0.0.1:7545"
w3=Web3(Web3.HTTPProvider(web_link))
web3=w3
account='0xf638C329D629fd130E74680244d7e4E5cd7352D1'
print(web3.isConnected())
web3.eth.defaultAccount=account

def deploy_contract(contract_interface):
    
    contract = w3.eth.contract(
        abi=contract_interface['abi'],
        bytecode=contract_interface['bin']
    )
    # Get transaction hash from deployed contract
    tx_hash =contract.constructor().transact()
    # Get tx receipt to get contract address
    tx_receipt = w3.eth.getTransactionReceipt(tx_hash)
    return tx_receipt['contractAddress']
# w3.eth.defaultAccount= w3.eth.accounts[0]
# bytecode='6080604052600260009081556001805461ffff191690556003819055600580546001600160a81b031916331790556109ba90819061003d90396000f3fe60806040526004361061007f5760003560e01c8063c040e6b81161004e578063c040e6b81461015c578063c92cd1b214610195578063cfe52bdd146101c8578063f2c298be146101ee57610086565b80632a4c80a41461008b57806358041a48146100c55780637eeb1773146100ed578063bceb514d1461012057610086565b3661008657005b600080fd5b6100b1600480360360208110156100a157600080fd5b50356001600160a01b03166102a1565b604080519115158252519081900360200190f35b6100eb600480360360208110156100db57600080fd5b50356001600160a01b031661035c565b005b3480156100f957600080fd5b506100eb6004803603602081101561011057600080fd5b50356001600160a01b0316610423565b34801561012c57600080fd5b506100eb6004803603604081101561014357600080fd5b5080356001600160a01b0316906020013560ff166104d3565b34801561016857600080fd5b50610171610684565b6040518082600281111561018157fe5b60ff16815260200191505060405180910390f35b3480156101a157600080fd5b506100eb600480360360208110156101b857600080fd5b50356001600160a01b031661068d565b6100eb600480360360208110156101de57600080fd5b50356001600160a01b0316610737565b3480156101fa57600080fd5b506100eb6004803603602081101561021157600080fd5b81019060208101813564010000000081111561022c57600080fd5b82018360208201111561023e57600080fd5b8035906020019184600183028401116401000000008311171561026057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061085a945050505050565b6000816002806001600160a01b03831660009081526002602081905260409091206003015460ff16908111156102d357fe5b14610321576040805162461bcd60e51b81526020600482015260196024820152786e6f7420696e2074686520726571756972656420737461746560381b604482015290519081900360640190fd5b6001600160a01b0384166000908152600260205260408120600401549054811061034f576001935050610355565b60009350505b5050919050565b336000818152600460205260409020600201546001600160a01b0316146103c7576040805162461bcd60e51b815260206004820152601a6024820152791e5bdd481b995959081d1bc81c9959da5cdd195c88199a5c9cdd60321b604482015290519081900360640190fd5b600380546001600160a01b039290921660008181526002602081905260408220948555600180860180546001600160a01b0319169094179093558401819055838301805460ff1916905560049093019290925580549091019055565b806000806001600160a01b03831660009081526002602081905260409091206003015460ff169081111561045357fe5b146104a1576040805162461bcd60e51b81526020600482015260196024820152786e6f7420696e2074686520726571756972656420737461746560381b604482015290519081900360640190fd5b6001600160a01b038316600090815260026020526040902060030180546001919060ff191682805b0217905550505050565b816001806001600160a01b03831660009081526002602081905260409091206003015460ff169081111561050357fe5b14610551576040805162461bcd60e51b81526020600482015260196024820152786e6f7420696e2074686520726571756972656420737461746560381b604482015290519081900360640190fd5b336000818152600460205260409020600201546001600160a01b0316146105bc576040805162461bcd60e51b815260206004820152601a6024820152791e5bdd481b995959081d1bc81c9959da5cdd195c88199a5c9cdd60321b604482015290519081900360640190fd5b33600090815260046020526040902060020154600160a01b900460ff1615610624576040805162461bcd60e51b81526020600482015260166024820152751e5bdd481a185d9948185b1c9958591e481d9bdd195960521b604482015290519081900360640190fd5b600183600181111561063257fe5b141561065b576001600160a01b0384166000908152600260205260409020600401805460010190555b5050336000908152600460205260409020600201805460ff60a01b1916600160a01b1790555050565b60015460ff1681565b806001806001600160a01b03831660009081526002602081905260409091206003015460ff16908111156106bd57fe5b1461070b576040805162461bcd60e51b81526020600482015260196024820152786e6f7420696e2074686520726571756972656420737461746560381b604482015290519081900360640190fd5b6001600160a01b0383166000908152600260208190526040909120600301805460ff19166001836104c9565b336000818152600460205260409020600201546001600160a01b0316146107a2576040805162461bcd60e51b815260206004820152601a6024820152791e5bdd481b995959081d1bc81c9959da5cdd195c88199a5c9cdd60321b604482015290519081900360640190fd5b6001600160a01b038082166000908152600260205260408082206001015490519216913480156108fc0292909190818181858888f193505050501580156107ed573d6000803e3d6000fd5b506001600160a01b03808216600090815260026020818152604092839020918201805434908101909155600190920154835194168452339084015282820152517f7c85e8630bb4531f4492b73593e689399a8f085c9bf902152cb608deedc05cde9181900360600190a150565b6005543360009081526004602090815260409091208054600160a01b90930460ff1660ff19909316929092178255825161089a92600101918401906108e9565b5050336000818152600460205260409020600201805460ff60a01b196001600160a01b03199091169092178216905560058054600160a01b80820460ff90811660010116029216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061092a57805160ff1916838001178555610957565b82800160010185558215610957579182015b8281111561095757825182559160200191906001019061093c565b50610963929150610967565b5090565b61098191905b80821115610963576000815560010161096d565b9056fea2646970667358221220320247ab441289f2810383cbc9b568b1b05f58b6ddf0892b69f82cf969cdcb6c64736f6c63430006010033'
# abi=json.loads('[{"inputs":[],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"FundsSended","type":"event"},{"inputs":[{"internalType":"address","name":"add","type":"address"}],"name":"endWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add","type":"address"}],"name":"initiateWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"id","type":"address"}],"name":"isAllowedToWithdraw","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"add","type":"address"}],"name":"registerFundi","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"add","type":"address"}],"name":"sendFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"stage","outputs":[{"internalType":"enum Funders.Stage","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fundeeAddress","type":"address"},{"internalType":"enum Funders.voteDetail","name":"v","type":"uint8"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]')
# F=web3.eth.contract(abi=abi,bytecode=bytecode)
# tx_hash=F.constructor().transact()
# tx_receipt=web3.eth.waitForTransactionReceipt(tx_hash)
# contract=web3.eth.contract(address=tx_receipt.contractAddress,abi=abi)
# tx_hash=contract.all_functions()
# print(contract.all_functions())
# tx_hash=contract.functions.register('ramu').transact()
# tx_receipt=web3.eth.waitForTransactionReceipt(tx_hash)
# print(tx_receipt)

contracts = compile_files(['contracts.sol'])
main_contract = contracts.pop("contracts.sol:Funders")
with open('data.json', 'w') as outfile:
    data = {
        "abi": main_contract['abi'],
        "contract_address": deploy_contract(main_contract)
    }
    json.dump(data, outfile, indent=4, sort_keys=True)